{"version":3,"file":"static/js/248.945da304.chunk.js","mappings":"uSAEaA,EAAOC,EAAAA,EAAAA,GAAH,8GAOJC,EAAWD,EAAAA,EAAAA,GAAH,sSAcRE,EAAQF,EAAAA,EAAAA,IAAH,2GAOLG,EAAQH,EAAAA,EAAAA,EAAH,wPAYLI,EAAOJ,EAAAA,EAAAA,EAAH,mP,8ICXjB,EAzB2B,WACzB,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAmBC,MAAK,SAAAC,GAAQ,OAAIN,EAAUM,EAAd,GACjC,GAAE,KAGD,+BACE,SAAC,KAAD,UACGP,EAAOQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAA3B,OACV,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,GAAE,iBAAYJ,GAAMK,MAAO,CAAEC,KAAMb,GAAzC,WACE,SAAC,KAAD,CAAOc,KAAKC,EAAAA,EAAAA,GAASN,GAAcO,IAAI,YACvC,SAAC,KAAD,UAAQR,KACR,SAAC,KAAD,UAAOE,QAJIH,EADL,OAYnB,EClBD,EATiB,WACf,OACE,6BACE,4CACA,SAAC,EAAD,MAGL,C,8LCPKU,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMf,EAAgB,mCAAG,oGACPe,EAAAA,EAAAA,IAAA,sBAAiC,CACtDC,OAAQ,CACNC,QAASH,KAHiB,cACxBZ,EADwB,yBAMvBA,EAASgB,KAAKC,SANS,2CAAH,qDAShBC,EAAiB,mCAAG,WAAMhB,GAAN,uFACRW,EAAAA,EAAAA,IAAA,gBAAmBX,GAAM,CAC9CY,OAAQ,CACNC,QAASH,KAHkB,cACzBZ,EADyB,yBAMxBA,EAASgB,MANe,2CAAH,sDASjBG,EAAS,mCAAG,WAAMjB,GAAN,uFACAW,EAAAA,EAAAA,IAAA,gBAAmBX,EAAnB,YAAiC,CACtDY,OAAQ,CACNC,QAASH,KAHU,cACjBZ,EADiB,yBAMhBA,EAASgB,KAAKI,MANE,2CAAH,sDASTC,EAAY,mCAAG,WAAMnB,GAAN,uFACHW,EAAAA,EAAAA,IAAA,gBAAmBX,EAAnB,YAAiC,CACtDY,OAAQ,CACNC,QAASH,KAHa,cACpBZ,EADoB,yBAMnBA,EAASgB,KAAKC,SANK,2CAAH,sDASZK,EAAkB,mCAAG,WAAMC,GAAN,uFACTV,EAAAA,EAAAA,IAAA,gBAA2B,CAChDC,OAAQ,CACNC,QAASH,EACTW,MAAAA,KAJ4B,cAC1BvB,EAD0B,yBAQzBA,EAASgB,KAAKC,SARW,2CAAH,qD,sDCzCxB,IAAMP,EAAW,SAAAc,GACtB,GAAIA,EAAO,MAAM,kCAAN,OAAyCA,EACrD,C","sources":["components/TrendingMoviesList/TrendingMoviesList.styled.jsx","components/TrendingMoviesList/TrendingMoviesList.jsx","pages/Home.jsx","services/FetchData.jsx","services/GetImageLink.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    list-style-type: none;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 15px;\n`;\n\nexport const ListItem = styled.li`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    width: 200px;\n    height: 330px;\n    transition: border-color 0.3s, box-shadow 0.3s;\n\n    &:hover {\n        border-color: #aaa;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n    }\n`;\n\nexport const Image = styled.img`\n    display: block;\n    width: 100%;\n    height: 300px;\n    object-fit: cover;\n`;\n\nexport const Title = styled.p`\n    height: 20px;\n    margin: 0;\n    padding: 5px 10px;\n    font-size: 12px;\n    background-color: rgba(0, 0, 0, 0.2);\n    color: #2a2a2a;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n`;\n\nexport const Rate = styled.p`\n    position: absolute;\n    top: 0;\n    right: 0;\n    margin: 0;\n    padding: 5px;\n    font-size: 12px;\n    font-weight: 500;\n    background-color: #F0E68C;\n    color: #000;\n    border-bottom-left-radius: 5px;\n`;","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchTrendMovies } from '../../services/FetchData';\nimport { getImage } from '../../services/GetImageLink';\nimport { List, ListItem, Image, Title, Rate } from './TrendingMoviesList.styled';\n\nconst TrendingMoviesList = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchTrendMovies().then(response => setMovies(response));\n  }, []);\n\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, poster_path, vote_average }) => (\n          <ListItem key={id}>\n            <Link to={`movies/${id}`} state={{ from: location }}>\n              <Image src={getImage(poster_path)} alt=\"poster\"/>\n              <Title>{title}</Title>\n              <Rate>{vote_average}</Rate>\n            </Link>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default TrendingMoviesList;","import TrendingMoviesList from '../components/TrendingMoviesList/TrendingMoviesList';\n\nconst HomePage = () => {\n  return (\n    <main>\n      <h2>Trending Today</h2>\n      <TrendingMoviesList />\n    </main>\n  );\n};\n\nexport default HomePage;","import axios from 'axios';\n\nconst API_KEY = 'd3ec04061e411f67d0c4daad21c62464';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return response.data.results;\n};","export const getImage = image => {\n  if (image) return `https://image.tmdb.org/t/p/w500${image}`;\n};"],"names":["List","styled","ListItem","Image","Title","Rate","useState","movies","setMovies","location","useLocation","useEffect","fetchTrendMovies","then","response","map","id","title","poster_path","vote_average","to","state","from","src","getImage","alt","API_KEY","axios","params","api_key","data","results","fetchMovieDetails","fetchCast","cast","fetchReviews","fetchMoviesByQuery","query","image"],"sourceRoot":""}