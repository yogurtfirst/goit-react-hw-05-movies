{"version":3,"file":"static/js/736.dd7f11cd.chunk.js","mappings":"gQAEaA,EAAOC,EAAAA,EAAAA,GAAH,4IAQJC,EAAWD,EAAAA,EAAAA,GAAH,kKASRE,EAAQF,EAAAA,EAAAA,IAAH,2GAOLG,EAAQH,EAAAA,EAAAA,EAAH,qFAMLI,EAAYJ,EAAAA,EAAAA,EAAH,uF,SCLtB,EArBa,WACT,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,GAAUH,GAAII,KAAKL,EACtB,GAAE,CAACC,KAGA,SAACT,EAAD,UACKO,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,KAAMN,EAAT,EAASA,GAAIO,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACN,UAACf,EAAD,YACI,SAACC,EAAD,CAAOe,KAAKC,EAAAA,EAAAA,GAASH,GAAeI,IAAKL,KACzC,SAACX,EAAD,UAAQW,KACR,UAACV,EAAD,gBAAkBY,EAAlB,UAHWR,EADT,KASrB,C,8LCvBKY,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAgB,mCAAG,oGACPD,EAAAA,EAAAA,IAAA,sBAAiC,CACtDE,OAAQ,CACNC,QAASJ,KAHiB,cACxBK,EADwB,yBAMvBA,EAASC,KAAKC,SANS,2CAAH,qDAShBC,EAAiB,mCAAG,WAAMpB,GAAN,uFACRa,EAAAA,EAAAA,IAAA,gBAAmBb,GAAM,CAC9Ce,OAAQ,CACNC,QAASJ,KAHkB,cACzBK,EADyB,yBAMxBA,EAASC,MANe,2CAAH,sDASjBf,EAAS,mCAAG,WAAMH,GAAN,uFACAa,EAAAA,EAAAA,IAAA,gBAAmBb,EAAnB,YAAiC,CACtDe,OAAQ,CACNC,QAASJ,KAHU,cACjBK,EADiB,yBAMhBA,EAASC,KAAKpB,MANE,2CAAH,sDASTuB,EAAY,mCAAG,WAAMrB,GAAN,uFACHa,EAAAA,EAAAA,IAAA,gBAAmBb,EAAnB,YAAiC,CACtDe,OAAQ,CACNC,QAASJ,KAHa,cACpBK,EADoB,yBAMnBA,EAASC,KAAKC,SANK,2CAAH,sDASZG,EAAkB,mCAAG,WAAMC,GAAN,uFACTV,EAAAA,EAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACNC,QAASJ,EACTW,MAAAA,KAJ4B,cAC1BN,EAD0B,yBAQzBA,EAASC,KAAKC,SARW,2CAAH,qD,sDCzCxB,IAAMT,EAAW,SAAAc,GACtB,GAAIA,EAAO,MAAM,kCAAN,OAAyCA,EACrD,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/FetchData.jsx","services/GetImageLink.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    list-style-type: none;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n    justify-content: center;\n`;\n\nexport const ListItem = styled.li`\n    display: flex;\n    flex-direction: column;\n    width: 120px;\n    height: 210px;\n    border-color: #aaa;\n    text-align: center;\n`;\n\nexport const Image = styled.img`\n    display: block;\n    width: 100%;\n    height: 180px;\n    object-fit: cover;\n`;\n\nexport const Actor = styled.p`\n    margin: 0;\n    font-size: 12px;\n    font-weight: 700;\n`;\n\nexport const Character = styled.p`\n    font-size: 12px;\n    margin: 0px;\n    font-weight: 500;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../../services/FetchData';\nimport { getImage } from '../../services/GetImageLink';\nimport { List, ListItem, Image, Actor, Character } from './Cast.styled';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const { id } = useParams();\n\n    useEffect(() => {\n        fetchCast(id).then(setCast);\n    }, [id]);\n\n    return (\n        <List>\n            {cast.map(({ name, id, profile_path, character }) => (\n                <ListItem key={id}>\n                    <Image src={getImage(profile_path)} alt={name} />\n                    <Actor>{name}</Actor>\n                    <Character>&#40; {character} &#41;</Character>\n                </ListItem>\n            ))}\n        </List>\n    );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = 'd3ec04061e411f67d0c4daad21c62464';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return response.data.results;\n};","export const getImage = image => {\n  if (image) return `https://image.tmdb.org/t/p/w500${image}`;\n};"],"names":["List","styled","ListItem","Image","Actor","Character","useState","cast","setCast","id","useParams","useEffect","fetchCast","then","map","name","profile_path","character","src","getImage","alt","API_KEY","axios","fetchTrendMovies","params","api_key","response","data","results","fetchMovieDetails","fetchReviews","fetchMoviesByQuery","query","image"],"sourceRoot":""}