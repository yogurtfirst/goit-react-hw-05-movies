{"version":3,"file":"static/js/264.3c396f96.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","services/FetchData.jsx","services/GetImageLink.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n    border: 0.5px solid grey;\n    border-radius: 8px;\n    background-color: #add8e6;\n    padding: 8px 12px;\n    text-transform: uppercase;\n    font-weight: 500;\n`;","import { useRef } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\n// import { AiFillCaretLeft } from \"react-icons/ai\";\nimport { Button } from './BackLink.styled'; \n\nconst BackLink = () => {\n    const location = useLocation();\n    const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n    return (\n        <Button> \n            <Link to={backLinkHref.current}> &#60; Go back</Link>\n        </Button>\n    );\n};\n\nexport default BackLink;","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    width: 800px;\n    margin: 15px auto;\n`;\n\nexport const Info = styled.div`\n    margin-left: 12px;\n`;\n\nexport const AdditionalInfo = styled.div`\n    border-top: 1px solid grey;\n    border-bottom: 1px solid grey;\n    margin-top: 8px;\n    margin-bottom: 8px;\n`;\n\nexport const List = styled.ul`\n    list-style-type: none;\n    display: flex;\n    gap: 20px;\n    justify-content: center;\n`;\n\nexport const ListItem = styled.li`\n    display: block;\n    padding: 12px;\n    text-align: center;\n    width: 60px;\n    background-color: #add8e6;\n`;","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, Outlet, Link } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../services/FetchData';\nimport { getImage } from '../../services/GetImageLink';\nimport { AdditionalInfo, Info, Container, List, ListItem } from './MovieCard.styled';\n\nconst MovieCard = () => {\n    const [movieDetails, setMovieDetails] = useState({});\n    const { id } = useParams();\n    const { poster_path, title, vote_average, overview, genres } = movieDetails;\n\n    useEffect(() => {\n        fetchMovieDetails(id).then(setMovieDetails);\n    }, [id]);\n\n    const getGenres = () => {\n        if (genres) return genres.map(el => el.name).join(', ');\n    };\n\n    return (\n        <Container>\n            <div style={{ display: 'flex' }}>\n                <img src={getImage(poster_path)} alt=\"poster\" width={240} />\n                <Info>\n                    <h2>{title}</h2>\n                    <p>User score: {vote_average}</p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <h3>Genres</h3>\n                    <p>{getGenres()}</p>\n                </Info>\n            </div>\n            <AdditionalInfo>\n                <p>Additional information</p>\n                <List>\n                    <ListItem>\n                        <Link to=\"cast\">Cast</Link>\n                    </ListItem>\n                    <ListItem>\n                        <Link to=\"reviews\">Reviews</Link>\n                    </ListItem>\n                </List>\n            </AdditionalInfo>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet />\n            </Suspense>\n        </Container>\n    );\n};\n\nexport default MovieCard;","import BackLink from '../components/BackLink/BackLink';\nimport MovieCard from '../components/MovieCard/MovieCard';\n\nconst MovieDetailsPage = () => {\n    return (\n        <>\n            <BackLink>Go back</BackLink>\n            <MovieCard />\n        </>\n    );\n};\n\nexport default MovieDetailsPage;","import axios from 'axios';\n\nconst API_KEY = 'd3ec04061e411f67d0c4daad21c62464';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return response.data.results;\n};","export const getImage = image => {\n  if (image) return `https://image.tmdb.org/t/p/w500${image}`;\n};"],"names":["Button","styled","location","useLocation","backLinkHref","useRef","state","from","to","current","Container","Info","AdditionalInfo","List","ListItem","useState","movieDetails","setMovieDetails","id","useParams","poster_path","title","vote_average","overview","genres","useEffect","fetchMovieDetails","then","style","display","src","getImage","alt","width","map","el","name","join","getGenres","Suspense","fallback","API_KEY","axios","fetchTrendMovies","params","api_key","response","data","results","fetchCast","cast","fetchReviews","fetchMoviesByQuery","query","image"],"sourceRoot":""}