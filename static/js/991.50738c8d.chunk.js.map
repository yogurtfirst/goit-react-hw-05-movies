{"version":3,"file":"static/js/991.50738c8d.chunk.js","mappings":"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","sources":["components/TrendingMoviesList/TrendingMoviesList.styled.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","services/FetchData.jsx","services/GetImageLink.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    list-style-type: none;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 15px;\n`;\n\nexport const ListItem = styled.li`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    width: 200px;\n    height: 330px;\n    transition: border-color 0.3s, box-shadow 0.3s;\n\n    &:hover {\n        border-color: #aaa;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n    }\n`;\n\nexport const Image = styled.img`\n    display: block;\n    width: 100%;\n    height: 300px;\n    object-fit: cover;\n`;\n\nexport const Title = styled.p`\n    height: 20px;\n    margin: 0;\n    padding: 5px 10px;\n    font-size: 12px;\n    background-color: rgba(0, 0, 0, 0.2);\n    color: #2a2a2a;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n`;\n\nexport const Rate = styled.p`\n    position: absolute;\n    top: 0;\n    right: 0;\n    margin: 0;\n    padding: 5px;\n    font-size: 12px;\n    font-weight: 500;\n    background-color: #F0E68C;\n    color: #000;\n    border-bottom-left-radius: 5px;\n`;","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n    padding: 4px;\n    width: 400px;\n    border-radius: 8px;\n    font-size: 16px;\n\n    &:focus {\n        background-color: coral;\n        color: white;\n    }\n`;\n\nexport const Button = styled.button`\n    margin-left: 10px;\n    padding: 4px 8px;\n    border-radius: 8px;\n    font-size: 16px;\n\n    &:hover,\n    &:focus {\n        color: white;\n        background-color: coral;\n    }\n`;\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n`;","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams, Link } from 'react-router-dom';\nimport { fetchMoviesByQuery } from '../../services/FetchData';\nimport { getImage } from '../../services/GetImageLink';\nimport { Button, Input, Container } from './SearchBar.styled';\nimport { List, ListItem, Image, Title, Rate } from '../TrendingMoviesList/TrendingMoviesList.styled';\n\nconst SearchBar = () => {\n    const [movies, setMovies] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const location = useLocation();\n\n    useEffect(() => {\n        if (!searchParams) return;\n\n        setInputValue(searchParams.get('query') ?? '');\n\n        async function getMovieList() {\n            const movieList = await fetchMoviesByQuery(searchParams.get('query'));\n            setMovies(movieList);\n        }\n\n        getMovieList();\n    }, [searchParams]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const query = inputValue !== '' ? { query: inputValue } : {};\n        setSearchParams(query);\n        fetchMoviesByQuery(inputValue)\n            .then(setMovies)\n            .catch(console.error);\n    };\n\n    const handleChange = ({ target: { value } }) => {\n        setInputValue(value);\n    };\n\n    return (\n        <>\n            <Container>\n                <form onSubmit={handleSubmit}>\n                    <Input\n                        name=\"query\"\n                        type=\"text\"\n                        value={inputValue}\n                        onChange={handleChange}\n                    />\n                    <Button type=\"sumbit\">Search</Button>\n                </form>\n            </Container>\n            \n            <List>\n                {movies.map(({ id, title, poster_path, vote_average }) => (\n                    <ListItem key={id}>\n                        <Link to={`${id}`} state={{ from: location }}>\n                            <Image src={getImage(poster_path)} alt=\"poster\"/>\n                            <Title>{title}</Title>\n                            <Rate>{vote_average}</Rate>\n                        </Link>\n                    </ListItem>\n                ))}\n            </List>\n        </>\n    );\n};\n\nexport default SearchBar;","import SearchBar from '../components/SearchBar/SearchBar';\n\nconst MoviesPage = () => {\n  return (\n    <main>\n      <SearchBar />\n    </main>\n  );\n};\n\nexport default MoviesPage;","import axios from 'axios';\n\nconst API_KEY = 'd3ec04061e411f67d0c4daad21c62464';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return response.data.results;\n};","export const getImage = image => {\n  if (image) return `https://image.tmdb.org/t/p/w500${image}`;\n};"],"names":["List","styled","ListItem","Image","Title","Rate","Input","Button","Container","useState","movies","setMovies","inputValue","setInputValue","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","fetchMoviesByQuery","get","movieList","getMovieList","onSubmit","e","preventDefault","query","then","catch","console","error","name","type","value","onChange","target","map","id","title","poster_path","vote_average","to","state","from","src","getImage","alt","API_KEY","axios","fetchTrendMovies","params","api_key","response","data","results","fetchMovieDetails","fetchCast","cast","fetchReviews","image"],"sourceRoot":""}