{"version":3,"file":"static/js/387.307021f2.chunk.js","mappings":"iPAEaA,EAAOC,EAAAA,EAAAA,GAAH,qHAOJC,EAAWD,EAAAA,EAAAA,GAAH,qH,SC4BrB,EAhCgB,WACZ,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAaR,OAXAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaH,GAAII,MAAK,SAAAC,GACM,IAApBA,EAASC,OACTP,EAAW,MAGXA,EAAWM,EAElB,GACJ,GAAE,CAACL,KAGA,iCACMF,IAAW,oEACZA,IACG,SAACJ,EAAD,UACKI,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAST,EAApB,EAAoBA,GAApB,OACT,UAACJ,EAAD,YACI,gBAAIc,MAAO,CAAEC,OAAQ,KAArB,qBAAqCH,MACrC,cAAGE,MAAO,CAAEC,OAAQ,KAApB,SAA4BF,MAFjBT,EADN,QAUhC,C,8LCjCKY,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAgB,mCAAG,oGACPD,EAAAA,EAAAA,IAAA,sBAAiC,CACtDE,OAAQ,CACNC,QAASJ,KAHiB,cACxBP,EADwB,yBAMvBA,EAASY,KAAKC,SANS,2CAAH,qDAShBC,EAAiB,mCAAG,WAAMnB,GAAN,uFACRa,EAAAA,EAAAA,IAAA,gBAAmBb,GAAM,CAC9Ce,OAAQ,CACNC,QAASJ,KAHkB,cACzBP,EADyB,yBAMxBA,EAASY,MANe,2CAAH,sDASjBG,EAAS,mCAAG,WAAMpB,GAAN,uFACAa,EAAAA,EAAAA,IAAA,gBAAmBb,EAAnB,YAAiC,CACtDe,OAAQ,CACNC,QAASJ,KAHU,cACjBP,EADiB,yBAMhBA,EAASY,KAAKI,MANE,2CAAH,sDASTlB,EAAY,mCAAG,WAAMH,GAAN,uFACHa,EAAAA,EAAAA,IAAA,gBAAmBb,EAAnB,YAAiC,CACtDe,OAAQ,CACNC,QAASJ,KAHa,cACpBP,EADoB,yBAMnBA,EAASY,KAAKC,SANK,2CAAH,sDASZI,EAAkB,mCAAG,WAAMC,GAAN,uFACTV,EAAAA,EAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACNC,QAASJ,EACTW,MAAAA,KAJ4B,cAC1BlB,EAD0B,yBAQzBA,EAASY,KAAKC,SARW,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/FetchData.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    list-style-type: none;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n`;\n\nexport const ListItem = styled.li`\n    margin: 0;\n    padding: 12px;\n    border: 0.5px solid grey;\n    border-radius: 12px;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../services/FetchData';\nimport { List, ListItem } from './Reviews.styled';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { id } = useParams();\n\n    useEffect(() => {\n        fetchReviews(id).then(response => {\n            if (response.length === 0) {\n                setReviews(null)\n            }\n            else {\n                setReviews(response)\n            };\n        });\n    }, [id]);\n\n    return (\n        <>\n            {!reviews && <p>There are no comments yet for this movie</p>}\n            {reviews && (\n                <List>\n                    {reviews.map(({ author, content, id }) => (\n                        <ListItem key={id}>\n                            <h4 style={{ margin: '0' }}>Author: {author}</h4>\n                            <p style={{ margin: '0' }}>{content}</p>\n                        </ListItem>\n                    ))}\n                </List>\n            )}\n        </>\n    );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = 'd3ec04061e411f67d0c4daad21c62464';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return response.data.results;\n};"],"names":["List","styled","ListItem","useState","reviews","setReviews","id","useParams","useEffect","fetchReviews","then","response","length","map","author","content","style","margin","API_KEY","axios","fetchTrendMovies","params","api_key","data","results","fetchMovieDetails","fetchCast","cast","fetchMoviesByQuery","query"],"sourceRoot":""}